package org.cmov.ticketinspector;

import java.io.IOException;
import java.net.URI;

import org.apache.http.HttpResponse;
import org.apache.http.client.ClientProtocolException;
import org.apache.http.client.HttpClient;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.entity.StringEntity;
import org.apache.http.impl.client.DefaultHttpClient;
import org.apache.http.protocol.BasicHttpContext;
import org.apache.http.protocol.HttpContext;
import org.cmov.ticketinspector.HttpRequestAsyncTask.HttpRequestType;
import org.json.JSONException;
import org.json.JSONObject;

import android.net.Uri;
import android.net.wifi.WifiManager;
import android.os.Bundle;
import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.util.Log;
import android.view.Menu;
import android.view.View;
import android.widget.Button;
import android.widget.Toast;

public class MainActivity extends Activity implements HttpRequestResultCallback {

	public static final String SERVER_URL = "http://10.13.37.70:4567";
	public static final String BUS_MAC_ADDRESS_PARAMETER = "bus";
	public static final int REQUEST_QR_TERMINAL = 1000001;
	public static final int REQUEST_QR_CLIENT = 1000002;
	public static final String EXTRA_QR_DECODE = "QRContent";
	private static final String TAG = MainActivity.class.getSimpleName();
	
	/**
	 * Listener definitions.
	 */
	
	View.OnClickListener mDownloadDataClickListener = new View.OnClickListener() {
		
		@Override
		public void onClick(View v) {
			Intent intent = new Intent(getApplicationContext(), CaptureActivity.class);
			startActivityForResult(intent, REQUEST_QR_TERMINAL);
		}
	};
	
	View.OnClickListener mValidateTicketClickListener = new View.OnClickListener() {
		
		@Override
		public void onClick(View v) {
			Intent intent = new Intent(getApplicationContext(), CaptureActivity.class);
			startActivityForResult(intent, REQUEST_QR_CLIENT);
		}
	};
	
	/**
	 * QR code management.
	 */
	
	protected void onActivityResult(int requestCode, int resultCode, Intent data) {
		if(resultCode == Activity.RESULT_OK) {
			switch (requestCode) {
			case REQUEST_QR_TERMINAL:
				manageDownloadDataQRCode(data);
				break;
				
			case REQUEST_QR_CLIENT:
				manageValidateTicketQRCode(data);
				break;

			default:
				break;
			}
		} else {
			Log.d(TAG, "QR activity didn't finish.");
		}
	}
	
	private void manageDownloadDataQRCode(Intent data) {
		try {
			JSONObject json = new JSONObject(data.getExtras().getCharSequence(EXTRA_QR_DECODE).toString());
			HttpRequestAsyncTask task = new HttpRequestAsyncTask(this,
					HttpRequestType.Post,
					json, 
					SERVER_URL + "/tickets/list", 
					"Download ticket data...");
			task.execute(new Void[] {});
		} catch (Exception e) {}
	}
	
	private void manageValidateTicketQRCode(Intent data) {
		// TODO
		Toast.makeText(getApplicationContext(),
				"Validate ticket: " + data.getExtras().getCharSequence(EXTRA_QR_DECODE),
				Toast.LENGTH_SHORT).show();
	}
	
	/**
	 * Activity overridden methods.
	 */

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_main);
		((Button) findViewById(R.id.download_data_button)).setOnClickListener(mDownloadDataClickListener);
		((Button) findViewById(R.id.validate_ticket_button)).setOnClickListener(mValidateTicketClickListener);
		
		// Enable WIFI.
		WifiManager wifi = (WifiManager) getSystemService(Context.WIFI_SERVICE);
		if(wifi != null && !wifi.isWifiEnabled()) {
			wifi.setWifiEnabled(true);
		}
	}

	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// Inflate the menu; this adds items to the action bar if it is present.
		// getMenuInflater().inflate(R.menu.main, menu);
		return true;
	}

	@Override
	public void onRequestResult(boolean result, JSONObject data) {
		// TODO Auto-generated method stub
		
	}

}
